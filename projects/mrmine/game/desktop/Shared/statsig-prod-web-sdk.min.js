/**
 * Skipped minification because the original files appears to be already minified.
 * Original file: /npm/statsig-js@4.14.3/build/statsig-prod-web-sdk.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var statsig;
(() => {
    var __webpack_modules__ = {
            23: (module, exports, __webpack_require__) => {
                var __WEBPACK_AMD_DEFINE_RESULT__;
                (function() {
                    "use strict";
                    var ERROR = "input is invalid type",
                        WINDOW = "object" == typeof window,
                        root = WINDOW ? window : {};
                    root.JS_SHA256_NO_WINDOW && (WINDOW = !1);
                    var WEB_WORKER = !WINDOW && "object" == typeof self,
                        NODE_JS = !root.JS_SHA256_NO_NODE_JS && "object" == typeof process && process.versions && process.versions.node;
                    NODE_JS ? root = __webpack_require__.g : WEB_WORKER && (root = self);
                    var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && module.exports,
                        AMD = __webpack_require__.amdO,
                        ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && "undefined" != typeof ArrayBuffer,
                        HEX_CHARS = "0123456789abcdef".split(""),
                        EXTRA = [-2147483648, 8388608, 32768, 128],
                        SHIFT = [24, 16, 8, 0],
                        K = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298],
                        OUTPUT_TYPES = ["hex", "array", "digest", "arrayBuffer"],
                        blocks = [];
                    !root.JS_SHA256_NO_NODE_JS && Array.isArray || (Array.isArray = function(e) {
                        return "[object Array]" === Object.prototype.toString.call(e)
                    }), !ARRAY_BUFFER || !root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW && ArrayBuffer.isView || (ArrayBuffer.isView = function(e) {
                        return "object" == typeof e && e.buffer && e.buffer.constructor === ArrayBuffer
                    });
                    var createOutputMethod = function(e, t) {
                            return function(s) {
                                return new Sha256(t, !0).update(s)[e]()
                            }
                        },
                        createMethod = function(e) {
                            var t = createOutputMethod("hex", e);
                            NODE_JS && (t = nodeWrap(t, e)), t.create = function() {
                                return new Sha256(e)
                            }, t.update = function(e) {
                                return t.create().update(e)
                            };
                            for (var s = 0; s < OUTPUT_TYPES.length; ++s) {
                                var i = OUTPUT_TYPES[s];
                                t[i] = createOutputMethod(i, e)
                            }
                            return t
                        },
                        nodeWrap = function(method, is224) {
                            var crypto = eval("require('crypto')"),
                                Buffer = eval("require('buffer').Buffer"),
                                algorithm = is224 ? "sha224" : "sha256",
                                nodeMethod = function(e) {
                                    if ("string" == typeof e) return crypto.createHash(algorithm).update(e, "utf8").digest("hex");
                                    if (null == e) throw new Error(ERROR);
                                    return e.constructor === ArrayBuffer && (e = new Uint8Array(e)), Array.isArray(e) || ArrayBuffer.isView(e) || e.constructor === Buffer ? crypto.createHash(algorithm).update(new Buffer(e)).digest("hex") : method(e)
                                };
                            return nodeMethod
                        },
                        createHmacOutputMethod = function(e, t) {
                            return function(s, i) {
                                return new HmacSha256(s, t, !0).update(i)[e]()
                            }
                        },
                        createHmacMethod = function(e) {
                            var t = createHmacOutputMethod("hex", e);
                            t.create = function(t) {
                                return new HmacSha256(t, e)
                            }, t.update = function(e, s) {
                                return t.create(e).update(s)
                            };
                            for (var s = 0; s < OUTPUT_TYPES.length; ++s) {
                                var i = OUTPUT_TYPES[s];
                                t[i] = createHmacOutputMethod(i, e)
                            }
                            return t
                        };

                    function Sha256(e, t) {
                        t ? (blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0, this.blocks = blocks) : this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], e ? (this.h0 = 3238371032, this.h1 = 914150663, this.h2 = 812702999, this.h3 = 4144912697, this.h4 = 4290775857, this.h5 = 1750603025, this.h6 = 1694076839, this.h7 = 3204075428) : (this.h0 = 1779033703, this.h1 = 3144134277, this.h2 = 1013904242, this.h3 = 2773480762, this.h4 = 1359893119, this.h5 = 2600822924, this.h6 = 528734635, this.h7 = 1541459225), this.block = this.start = this.bytes = this.hBytes = 0, this.finalized = this.hashed = !1, this.first = !0, this.is224 = e
                    }

                    function HmacSha256(e, t, s) {
                        var i, r = typeof e;
                        if ("string" === r) {
                            var a, n = [],
                                o = e.length,
                                l = 0;
                            for (i = 0; i < o; ++i)(a = e.charCodeAt(i)) < 128 ? n[l++] = a : a < 2048 ? (n[l++] = 192 | a >> 6, n[l++] = 128 | 63 & a) : a < 55296 || a >= 57344 ? (n[l++] = 224 | a >> 12, n[l++] = 128 | a >> 6 & 63, n[l++] = 128 | 63 & a) : (a = 65536 + ((1023 & a) << 10 | 1023 & e.charCodeAt(++i)), n[l++] = 240 | a >> 18, n[l++] = 128 | a >> 12 & 63, n[l++] = 128 | a >> 6 & 63, n[l++] = 128 | 63 & a);
                            e = n
                        } else {
                            if ("object" !== r) throw new Error(ERROR);
                            if (null === e) throw new Error(ERROR);
                            if (ARRAY_BUFFER && e.constructor === ArrayBuffer) e = new Uint8Array(e);
                            else if (!(Array.isArray(e) || ARRAY_BUFFER && ArrayBuffer.isView(e))) throw new Error(ERROR)
                        }
                        e.length > 64 && (e = new Sha256(t, !0).update(e).array());
                        var u = [],
                            d = [];
                        for (i = 0; i < 64; ++i) {
                            var h = e[i] || 0;
                            u[i] = 92 ^ h, d[i] = 54 ^ h
                        }
                        Sha256.call(this, t, s), this.update(d), this.oKeyPad = u, this.inner = !0, this.sharedMemory = s
                    }
                    Sha256.prototype.update = function(e) {
                        if (!this.finalized) {
                            var t, s = typeof e;
                            if ("string" !== s) {
                                if ("object" !== s) throw new Error(ERROR);
                                if (null === e) throw new Error(ERROR);
                                if (ARRAY_BUFFER && e.constructor === ArrayBuffer) e = new Uint8Array(e);
                                else if (!(Array.isArray(e) || ARRAY_BUFFER && ArrayBuffer.isView(e))) throw new Error(ERROR);
                                t = !0
                            }
                            for (var i, r, a = 0, n = e.length, o = this.blocks; a < n;) {
                                if (this.hashed && (this.hashed = !1, o[0] = this.block, o[16] = o[1] = o[2] = o[3] = o[4] = o[5] = o[6] = o[7] = o[8] = o[9] = o[10] = o[11] = o[12] = o[13] = o[14] = o[15] = 0), t)
                                    for (r = this.start; a < n && r < 64; ++a) o[r >> 2] |= e[a] << SHIFT[3 & r++];
                                else
                                    for (r = this.start; a < n && r < 64; ++a)(i = e.charCodeAt(a)) < 128 ? o[r >> 2] |= i << SHIFT[3 & r++] : i < 2048 ? (o[r >> 2] |= (192 | i >> 6) << SHIFT[3 & r++], o[r >> 2] |= (128 | 63 & i) << SHIFT[3 & r++]) : i < 55296 || i >= 57344 ? (o[r >> 2] |= (224 | i >> 12) << SHIFT[3 & r++], o[r >> 2] |= (128 | i >> 6 & 63) << SHIFT[3 & r++], o[r >> 2] |= (128 | 63 & i) << SHIFT[3 & r++]) : (i = 65536 + ((1023 & i) << 10 | 1023 & e.charCodeAt(++a)), o[r >> 2] |= (240 | i >> 18) << SHIFT[3 & r++], o[r >> 2] |= (128 | i >> 12 & 63) << SHIFT[3 & r++], o[r >> 2] |= (128 | i >> 6 & 63) << SHIFT[3 & r++], o[r >> 2] |= (128 | 63 & i) << SHIFT[3 & r++]);
                                this.lastByteIndex = r, this.bytes += r - this.start, r >= 64 ? (this.block = o[16], this.start = r - 64, this.hash(), this.hashed = !0) : this.start = r
                            }
                            return this.bytes > 4294967295 && (this.hBytes += this.bytes / 4294967296 << 0, this.bytes = this.bytes % 4294967296), this
                        }
                    }, Sha256.prototype.finalize = function() {
                        if (!this.finalized) {
                            this.finalized = !0;
                            var e = this.blocks,
                                t = this.lastByteIndex;
                            e[16] = this.block, e[t >> 2] |= EXTRA[3 & t], this.block = e[16], t >= 56 && (this.hashed || this.hash(), e[0] = this.block, e[16] = e[1] = e[2] = e[3] = e[4] = e[5] = e[6] = e[7] = e[8] = e[9] = e[10] = e[11] = e[12] = e[13] = e[14] = e[15] = 0), e[14] = this.hBytes << 3 | this.bytes >>> 29, e[15] = this.bytes << 3, this.hash()
                        }
                    }, Sha256.prototype.hash = function() {
                        var e, t, s, i, r, a, n, o, l, u = this.h0,
                            d = this.h1,
                            h = this.h2,
                            c = this.h3,
                            g = this.h4,
                            f = this.h5,
                            p = this.h6,
                            v = this.h7,
                            _ = this.blocks;
                        for (e = 16; e < 64; ++e) t = ((r = _[e - 15]) >>> 7 | r << 25) ^ (r >>> 18 | r << 14) ^ r >>> 3, s = ((r = _[e - 2]) >>> 17 | r << 15) ^ (r >>> 19 | r << 13) ^ r >>> 10, _[e] = _[e - 16] + t + _[e - 7] + s << 0;
                        for (l = d & h, e = 0; e < 64; e += 4) this.first ? (this.is224 ? (a = 300032, v = (r = _[0] - 1413257819) - 150054599 << 0, c = r + 24177077 << 0) : (a = 704751109, v = (r = _[0] - 210244248) - 1521486534 << 0, c = r + 143694565 << 0), this.first = !1) : (t = (u >>> 2 | u << 30) ^ (u >>> 13 | u << 19) ^ (u >>> 22 | u << 10), i = (a = u & d) ^ u & h ^ l, v = c + (r = v + (s = (g >>> 6 | g << 26) ^ (g >>> 11 | g << 21) ^ (g >>> 25 | g << 7)) + (g & f ^ ~g & p) + K[e] + _[e]) << 0, c = r + (t + i) << 0), t = (c >>> 2 | c << 30) ^ (c >>> 13 | c << 19) ^ (c >>> 22 | c << 10), i = (n = c & u) ^ c & d ^ a, p = h + (r = p + (s = (v >>> 6 | v << 26) ^ (v >>> 11 | v << 21) ^ (v >>> 25 | v << 7)) + (v & g ^ ~v & f) + K[e + 1] + _[e + 1]) << 0, t = ((h = r + (t + i) << 0) >>> 2 | h << 30) ^ (h >>> 13 | h << 19) ^ (h >>> 22 | h << 10), i = (o = h & c) ^ h & u ^ n, f = d + (r = f + (s = (p >>> 6 | p << 26) ^ (p >>> 11 | p << 21) ^ (p >>> 25 | p << 7)) + (p & v ^ ~p & g) + K[e + 2] + _[e + 2]) << 0, t = ((d = r + (t + i) << 0) >>> 2 | d << 30) ^ (d >>> 13 | d << 19) ^ (d >>> 22 | d << 10), i = (l = d & h) ^ d & c ^ o, g = u + (r = g + (s = (f >>> 6 | f << 26) ^ (f >>> 11 | f << 21) ^ (f >>> 25 | f << 7)) + (f & p ^ ~f & v) + K[e + 3] + _[e + 3]) << 0, u = r + (t + i) << 0;
                        this.h0 = this.h0 + u << 0, this.h1 = this.h1 + d << 0, this.h2 = this.h2 + h << 0, this.h3 = this.h3 + c << 0, this.h4 = this.h4 + g << 0, this.h5 = this.h5 + f << 0, this.h6 = this.h6 + p << 0, this.h7 = this.h7 + v << 0
                    }, Sha256.prototype.hex = function() {
                        this.finalize();
                        var e = this.h0,
                            t = this.h1,
                            s = this.h2,
                            i = this.h3,
                            r = this.h4,
                            a = this.h5,
                            n = this.h6,
                            o = this.h7,
                            l = HEX_CHARS[e >> 28 & 15] + HEX_CHARS[e >> 24 & 15] + HEX_CHARS[e >> 20 & 15] + HEX_CHARS[e >> 16 & 15] + HEX_CHARS[e >> 12 & 15] + HEX_CHARS[e >> 8 & 15] + HEX_CHARS[e >> 4 & 15] + HEX_CHARS[15 & e] + HEX_CHARS[t >> 28 & 15] + HEX_CHARS[t >> 24 & 15] + HEX_CHARS[t >> 20 & 15] + HEX_CHARS[t >> 16 & 15] + HEX_CHARS[t >> 12 & 15] + HEX_CHARS[t >> 8 & 15] + HEX_CHARS[t >> 4 & 15] + HEX_CHARS[15 & t] + HEX_CHARS[s >> 28 & 15] + HEX_CHARS[s >> 24 & 15] + HEX_CHARS[s >> 20 & 15] + HEX_CHARS[s >> 16 & 15] + HEX_CHARS[s >> 12 & 15] + HEX_CHARS[s >> 8 & 15] + HEX_CHARS[s >> 4 & 15] + HEX_CHARS[15 & s] + HEX_CHARS[i >> 28 & 15] + HEX_CHARS[i >> 24 & 15] + HEX_CHARS[i >> 20 & 15] + HEX_CHARS[i >> 16 & 15] + HEX_CHARS[i >> 12 & 15] + HEX_CHARS[i >> 8 & 15] + HEX_CHARS[i >> 4 & 15] + HEX_CHARS[15 & i] + HEX_CHARS[r >> 28 & 15] + HEX_CHARS[r >> 24 & 15] + HEX_CHARS[r >> 20 & 15] + HEX_CHARS[r >> 16 & 15] + HEX_CHARS[r >> 12 & 15] + HEX_CHARS[r >> 8 & 15] + HEX_CHARS[r >> 4 & 15] + HEX_CHARS[15 & r] + HEX_CHARS[a >> 28 & 15] + HEX_CHARS[a >> 24 & 15] + HEX_CHARS[a >> 20 & 15] + HEX_CHARS[a >> 16 & 15] + HEX_CHARS[a >> 12 & 15] + HEX_CHARS[a >> 8 & 15] + HEX_CHARS[a >> 4 & 15] + HEX_CHARS[15 & a] + HEX_CHARS[n >> 28 & 15] + HEX_CHARS[n >> 24 & 15] + HEX_CHARS[n >> 20 & 15] + HEX_CHARS[n >> 16 & 15] + HEX_CHARS[n >> 12 & 15] + HEX_CHARS[n >> 8 & 15] + HEX_CHARS[n >> 4 & 15] + HEX_CHARS[15 & n];
                        return this.is224 || (l += HEX_CHARS[o >> 28 & 15] + HEX_CHARS[o >> 24 & 15] + HEX_CHARS[o >> 20 & 15] + HEX_CHARS[o >> 16 & 15] + HEX_CHARS[o >> 12 & 15] + HEX_CHARS[o >> 8 & 15] + HEX_CHARS[o >> 4 & 15] + HEX_CHARS[15 & o]), l
                    }, Sha256.prototype.toString = Sha256.prototype.hex, Sha256.prototype.digest = function() {
                        this.finalize();
                        var e = this.h0,
                            t = this.h1,
                            s = this.h2,
                            i = this.h3,
                            r = this.h4,
                            a = this.h5,
                            n = this.h6,
                            o = this.h7,
                            l = [e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e, t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, 255 & t, s >> 24 & 255, s >> 16 & 255, s >> 8 & 255, 255 & s, i >> 24 & 255, i >> 16 & 255, i >> 8 & 255, 255 & i, r >> 24 & 255, r >> 16 & 255, r >> 8 & 255, 255 & r, a >> 24 & 255, a >> 16 & 255, a >> 8 & 255, 255 & a, n >> 24 & 255, n >> 16 & 255, n >> 8 & 255, 255 & n];
                        return this.is224 || l.push(o >> 24 & 255, o >> 16 & 255, o >> 8 & 255, 255 & o), l
                    }, Sha256.prototype.array = Sha256.prototype.digest, Sha256.prototype.arrayBuffer = function() {
                        this.finalize();
                        var e = new ArrayBuffer(this.is224 ? 28 : 32),
                            t = new DataView(e);
                        return t.setUint32(0, this.h0), t.setUint32(4, this.h1), t.setUint32(8, this.h2), t.setUint32(12, this.h3), t.setUint32(16, this.h4), t.setUint32(20, this.h5), t.setUint32(24, this.h6), this.is224 || t.setUint32(28, this.h7), e
                    }, HmacSha256.prototype = new Sha256, HmacSha256.prototype.finalize = function() {
                        if (Sha256.prototype.finalize.call(this), this.inner) {
                            this.inner = !1;
                            var e = this.array();
                            Sha256.call(this, this.is224, this.sharedMemory), this.update(this.oKeyPad), this.update(e), Sha256.prototype.finalize.call(this)
                        }
                    };
                    var exports = createMethod();
                    exports.sha256 = exports, exports.sha224 = createMethod(!0), exports.sha256.hmac = createHmacMethod(), exports.sha224.hmac = createHmacMethod(!0), COMMON_JS ? module.exports = exports : (root.sha256 = exports.sha256, root.sha224 = exports.sha224, AMD && (__WEBPACK_AMD_DEFINE_RESULT__ = function() {
                        return exports
                    }.call(exports, __webpack_require__, exports, module), void 0 === __WEBPACK_AMD_DEFINE_RESULT__ || (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)))
                })()
            },
            825: (e, t) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                t.default = class {
                    constructor(e, t = {}, s = "", i = [], r = "") {
                        this.name = e, this.value = JSON.parse(JSON.stringify(t)), this.ruleID = s, this.secondaryExposures = i, this.allocatedExperimentName = r
                    }
                    get(e, t, s) {
                        const i = this.getValue(e, t);
                        return null == i ? t : s ? s(i) ? i : t : null == t || typeof i == typeof t && Array.isArray(t) === Array.isArray(i) ? i : t
                    }
                    getValue(e, t) {
                        return null == e ? this.value : (null == t && (t = null), null == this.value[e] ? t : this.value[e])
                    }
                    getRuleID() {
                        return this.ruleID
                    }
                    getName() {
                        return this.name
                    }
                    _getSecondaryExposures() {
                        return this.secondaryExposures
                    }
                    _getAllocatedExperimentName() {
                        return this.allocatedExperimentName
                    }
                }
            },
            857: (e, t) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                class s {
                    constructor(e, t = {}, s = "", i = null, r = [], a = [], n = "", o = []) {
                        this.sdkInternal = i, this.name = e, this.value = JSON.parse(JSON.stringify(t)), this.ruleID = s, this.secondaryExposures = r, this.undelegatedSecondaryExposures = a, this.allocatedExperimentName = n, this.explicitParameters = o
                    }
                    static _create(e, t = {}, i = "", r = null, a = [], n = [], o = "", l = []) {
                        return new s(e, t, i, r, a, n, o, l)
                    }
                    get(e, t, s) {
                        const i = this.value[e];
                        if (null == i) return t;
                        const r = () => (this.logLayerParameterExposure(e), i);
                        return s ? s(i) ? r() : t : null == t || typeof i == typeof t && Array.isArray(t) === Array.isArray(i) ? r() : t
                    }
                    getValue(e, t) {
                        null == t && (t = null);
                        const s = this.value[e];
                        return null != s && this.logLayerParameterExposure(e), null != s ? s : t
                    }
                    getRuleID() {
                        return this.ruleID
                    }
                    getName() {
                        return this.name
                    }
                    _getSecondaryExposures() {
                        return this.secondaryExposures
                    }
                    _getAllocatedExperimentName() {
                        return this.allocatedExperimentName
                    }
                    logLayerParameterExposure(e) {
                        var t;
                        let s = "",
                            i = this.undelegatedSecondaryExposures;
                        const r = this.explicitParameters.includes(e);
                        r && (s = this.allocatedExperimentName, i = this.secondaryExposures), null === (t = this.sdkInternal) || void 0 === t || t.getLogger().logLayerExposure(this.sdkInternal.getCurrentUser(), this.name, this.ruleID, i, s, e, r)
                    }
                }
                t.default = s
            },
            820: (e, t) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                t.default = class {
                    constructor(e) {
                        this.user = null, this.value = null, this.metadata = null, this.eventName = e, this.statsigMetadata = {}, this.time = Date.now()
                    }
                    getName() {
                        return this.eventName
                    }
                    setValue(e) {
                        this.value = e
                    }
                    setMetadata(e) {
                        this.metadata = e
                    }
                    addStatsigMetadata(e, t) {
                        this.statsigMetadata[e] = t
                    }
                    setUser(e) {
                        this.user = { ...e
                        }, delete this.user.privateAttributes
                    }
                    setSecondaryExposures(e = []) {
                        this.secondaryExposures = e
                    }
                    toJsonObject() {
                        var e;
                        return {
                            eventName: this.eventName,
                            user: this.user,
                            value: this.value,
                            metadata: this.metadata,
                            time: this.time,
                            statsigMetadata: this.statsigMetadata,
                            secondaryExposures: null !== (e = this.secondaryExposures) && void 0 !== e ? e : void 0
                        }
                    }
                }
            },
            793: function(e, t, s) {
                "use strict";
                var i = this && this.__importDefault || function(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                };
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                const r = i(s(820)),
                    a = i(s(578)),
                    n = i(s(332)),
                    o = i(s(69)),
                    l = i(s(574)),
                    u = i(s(567)),
                    d = s(898),
                    h = i(s(31)),
                    c = i(s(682)),
                    g = 64,
                    f = 1024;
                class p {
                    constructor(e, t, s) {
                        if (this.appState = null, this.currentAppState = null, this.initCalled = !1, this.pendingInitPromise = null, this.optionalLoggingSetup = !1, "string" != typeof e || !e.startsWith("client-")) throw new Error("Invalid key provided.  You must use a Client SDK Key from the Statsig console to initialize the sdk");
                        this.ready = !1, this.sdkKey = e, this.options = new l.default(s), this.identity = new a.default(this.normalizeUser(null != t ? t : null), this.options.getOverrideStableID(), p.reactNativeUUID), this.network = new o.default(this), this.store = new u.default(this), this.logger = new n.default(this), null != (null == s ? void 0 : s.initializeValues) && this.setInitializeValues(null == s ? void 0 : s.initializeValues)
                    }
                    getNetwork() {
                        return this.network
                    }
                    getStore() {
                        return this.store
                    }
                    getLogger() {
                        return this.logger
                    }
                    getOptions() {
                        return this.options
                    }
                    getSDKKey() {
                        return null == this.sdkKey ? "" : this.sdkKey
                    }
                    getCurrentUser() {
                        return this.identity.getUser()
                    }
                    getCurrentUserCacheKey() {
                        var e, t, s;
                        let i = `userID:${String(null!==(t=null===(e=this.identity.getUser())||void 0===e?void 0:e.userID)&&void 0!==t?t:"")};stableID:${this.getStableID()}`;
                        const r = null === (s = this.identity.getUser()) || void 0 === s ? void 0 : s.customIDs;
                        if (null != r)
                            for (const [e, t] of Object.entries(r)) i += `;${e}:${t}`;
                        return (0, d.SimpleHash)(i)
                    }
                    getStatsigMetadata() {
                        return this.identity.getStatsigMetadata()
                    }
                    setInitializeValues(e) {
                        this.store.bootstrap(e), this.ready || (this.ready = !0, this.initCalled = !0), this.handleOptionalLogging(), this.logger.sendSavedRequests()
                    }
                    async initializeAsync() {
                        if (null != this.pendingInitPromise) return this.pendingInitPromise;
                        if (this.ready) return Promise.resolve();
                        this.initCalled = !0, h.default.asyncStorage && (await this.identity.initAsync(), await this.store.loadFromAsyncStorage()), this.appState && this.appState.addEventListener && "function" == typeof this.appState.addEventListener && (this.currentAppState = this.appState.currentState, this.appState.addEventListener("change", this.handleAppStateChange.bind(this)));
                        const e = this.getCurrentUserCacheKey();
                        return this.options.getLocalModeEnabled() ? Promise.resolve() : (this.pendingInitPromise = this.network.fetchValues(this.identity.getUser(), this.options.getInitTimeoutMs(), (async t => {
                            await this.store.save(e, t)
                        }), (e => {})).catch((e => {})).finally((async () => {
                            this.pendingInitPromise = null, this.ready = !0, this.logger.sendSavedRequests()
                        })), this.handleOptionalLogging(), this.pendingInitPromise)
                    }
                    checkGate(e, t = !1) {
                        if (this.ensureStoreLoaded(), "string" != typeof e || 0 === e.length) throw new Error("Must pass a valid string as the gateName.");
                        return this.store.checkGate(e, t)
                    }
                    getConfig(e, t = !1) {
                        if (this.ensureStoreLoaded(), "string" != typeof e || 0 === e.length) throw new Error("Must pass a valid string as the configName.");
                        return this.store.getConfig(e, t)
                    }
                    getExperiment(e, t = !1, s = !1) {
                        if (this.ensureStoreLoaded(), "string" != typeof e || 0 === e.length) throw new Error("Must pass a valid string as the experimentName.");
                        return this.store.getExperiment(e, t, s)
                    }
                    getLayer(e, t = !1) {
                        if (this.ensureStoreLoaded(), "string" != typeof e || 0 === e.length) throw new Error("Must pass a valid string as the layerName.");
                        return this.store.getLayer(e, t)
                    }
                    logEvent(e, t = null, s = null) {
                        if (!this.logger || !this.sdkKey) throw new Error("Must initialize() before logging events.");
                        if ("string" != typeof e || 0 === e.length) return;
                        this.shouldTrimParam(e, g) && (e = e.substring(0, g)), "string" == typeof t && this.shouldTrimParam(t, g) && (t = t.substring(0, g)), this.shouldTrimParam(s, f) && (s = {
                            error: "not logged due to size too large"
                        });
                        const i = new r.default(e);
                        i.setValue(t), i.setMetadata(s), i.setUser(this.getCurrentUser()), this.logger.log(i)
                    }
                    async updateUser(e) {
                        if (!this.initializeCalled()) throw new Error("Call initialize() first.");
                        this.identity.updateUser(this.normalizeUser(e)), this.logger.resetDedupeKeys();
                        const t = this.identity.getUser(),
                            s = this.getCurrentUserCacheKey();
                        return null != this.pendingInitPromise && await this.pendingInitPromise, this.options.getLocalModeEnabled() ? Promise.resolve(!0) : (this.pendingInitPromise = this.network.fetchValues(t, this.options.getInitTimeoutMs(), (async e => {
                            await this.store.save(s, e)
                        }), (e => {})).finally((() => {
                            this.pendingInitPromise = null
                        })), this.pendingInitPromise.then((() => Promise.resolve(!0))).catch((() => Promise.resolve(!1))))
                    }
                    shutdown() {
                        this.logger.flush(!0), this.appState && this.appState.removeEventListener && "function" == typeof this.appState.removeEventListener && this.appState.removeEventListener("change", this.handleAppStateChange.bind(this)), c.default.cleanup()
                    }
                    overrideGate(e, t) {
                        this.ensureStoreLoaded(), this.store.overrideGate(e, t)
                    }
                    overrideConfig(e, t) {
                        this.ensureStoreLoaded(), this.store.overrideConfig(e, t)
                    }
                    removeGateOverride(e) {
                        this.ensureStoreLoaded(), this.store.removeGateOverride(e)
                    }
                    removeConfigOverride(e) {
                        this.ensureStoreLoaded(), this.store.removeConfigOverride(e)
                    }
                    removeOverride(e) {
                        this.ensureStoreLoaded(), this.store.removeGateOverride(e)
                    }
                    getOverrides() {
                        return this.ensureStoreLoaded(), this.store.getAllOverrides().gates
                    }
                    getAllOverrides() {
                        return this.ensureStoreLoaded(), this.store.getAllOverrides()
                    }
                    getStableID() {
                        return this.identity.getStatsigMetadata().stableID
                    }
                    initializeCalled() {
                        return this.initCalled
                    }
                    setSDKPackageInfo(e) {
                        null != e && this.identity.setSDKPackageInfo(e)
                    }
                    static setAsyncStorage(e) {
                        null != e && (h.default.asyncStorage = e)
                    }
                    static setReactNativeUUID(e) {
                        null != e && (p.reactNativeUUID = e)
                    }
                    setAppState(e) {
                        null != e && (this.appState = e)
                    }
                    setNativeModules(e) {
                        null != e && this.identity.setNativeModules(e)
                    }
                    setPlatform(e) {
                        null != e && this.identity.setPlatform(e)
                    }
                    setRNDeviceInfo(e) {
                        null != e && this.identity.setRNDeviceInfo(e)
                    }
                    setExpoConstants(e) {
                        null != e && this.identity.setExpoConstants(e)
                    }
                    setExpoDevice(e) {
                        null != e && this.identity.setExpoDevice(e)
                    }
                    handleOptionalLogging() {
                        if ("undefined" == typeof window || !window || !window.addEventListener) return;
                        if (this.optionalLoggingSetup) return;
                        const e = this.identity.getUser();
                        if (this.options.getDisableErrorLogging() || window.addEventListener("error", (t => {
                                var s;
                                this.logger.logAppError(e, null !== (s = t.message) && void 0 !== s ? s : "", {
                                    filename: t.filename,
                                    lineno: t.lineno,
                                    colno: t.colno,
                                    error_obj: t.error
                                })
                            })), !this.options.getDisableAutoMetricsLogging()) {
                            if ("undefined" == typeof document || !document || "undefined" == typeof setTimeout || !setTimeout) return;
                            const t = () => {
                                setTimeout((() => {
                                    this.logger.logAppMetrics(e)
                                }), 1e3)
                            };
                            "complete" === document.readyState ? t() : window.addEventListener("load", (() => t()))
                        }
                        this.optionalLoggingSetup = !0
                    }
                    handleAppStateChange(e) {
                        var t;
                        "active" === this.currentAppState && e.match(/inactive|background/) ? this.logger.flush(!0) : (null === (t = this.currentAppState) || void 0 === t ? void 0 : t.match(/inactive|background/)) && "active" === e && this.logger.sendSavedRequests(), this.currentAppState = e
                    }
                    shouldTrimParam(e, t) {
                        return null != e && ("string" == typeof e ? e.length > t : "object" == typeof e ? JSON.stringify(e).length > t : "number" == typeof e && e.toString().length > t)
                    }
                    normalizeUser(e) {
                        let t = JSON.parse(JSON.stringify(e));
                        return t = this.trimUserObjIfNeeded(t), null != this.options.getEnvironment() && (t.statsigEnvironment = this.options.getEnvironment()), t
                    }
                    trimUserObjIfNeeded(e) {
                        var t, s;
                        return null == e ? {} : (this.shouldTrimParam(null !== (t = e.userID) && void 0 !== t ? t : null, g) && (e.userID = null === (s = e.userID) || void 0 === s ? void 0 : s.toString().substring(0, g)), this.shouldTrimParam(e, f) && (e.custom = {}, this.shouldTrimParam(e, f) && (e = {
                            userID: e.userID
                        })), e)
                    }
                    ensureStoreLoaded() {
                        if (!this.store.isLoaded()) throw new Error("Call and wait for initialize() to finish first.")
                    }
                }
                t.default = p
            },
            578: function(e, t, s) {
                "use strict";
                var i = this && this.__importDefault || function(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                };
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                const r = s(614),
                    a = s(652),
                    n = i(s(31)),
                    o = i(s(682));
                t.default = class {
                    constructor(e, t, i) {
                        var r, l, u;
                        this.platform = null, this.nativeModules = null, this.reactNativeUUID = i, this.user = e, this.statsigMetadata = {
                            sessionID: this.getUUID(),
                            sdkType: "js-client",
                            sdkVersion: null !== (l = null === (r = s(147)) || void 0 === r ? void 0 : r.version) && void 0 !== l ? l : ""
                        };
                        let d = t;
                        n.default.asyncStorage || (d = null !== (u = null != d ? d : o.default.getItem(a.STATSIG_STABLE_ID_KEY)) && void 0 !== u ? u : this.getUUID(), o.default.setItem(a.STATSIG_STABLE_ID_KEY, d)), d && (this.statsigMetadata.stableID = d)
                    }
                    async initAsync() {
                        let e = this.statsigMetadata.stableID;
                        return e || (e = await n.default.getItemAsync(a.STATSIG_STABLE_ID_KEY), e = null != e ? e : this.getUUID()), n.default.setItemAsync(a.STATSIG_STABLE_ID_KEY, e), this.statsigMetadata.stableID = e, this
                    }
                    getStatsigMetadata() {
                        return this.statsigMetadata
                    }
                    getUser() {
                        return this.user
                    }
                    updateUser(e) {
                        this.user = e, this.statsigMetadata.sessionID = this.getUUID()
                    }
                    setSDKPackageInfo(e) {
                        this.statsigMetadata.sdkType = e.sdkType, this.statsigMetadata.sdkVersion = e.sdkVersion
                    }
                    setPlatform(e) {
                        this.platform = e, this.updateMetadataFromNativeModules()
                    }
                    setNativeModules(e) {
                        this.nativeModules = e, this.updateMetadataFromNativeModules()
                    }
                    updateMetadataFromNativeModules() {
                        var e, t, s, i, r, a, n;
                        null != this.platform && null != this.nativeModules && ("android" === (null === (e = this.platform.OS) || void 0 === e ? void 0 : e.toLocaleLowerCase()) ? this.statsigMetadata.locale = null === (t = this.nativeModules.I18nManager) || void 0 === t ? void 0 : t.localeIdentifier : "ios" === (null === (s = this.platform.OS) || void 0 === s ? void 0 : s.toLocaleLowerCase()) && (this.statsigMetadata.locale = (null === (r = null === (i = this.nativeModules.SettingsManager) || void 0 === i ? void 0 : i.settings) || void 0 === r ? void 0 : r.AppleLocale) || (null === (n = null === (a = this.nativeModules.SettingsManager) || void 0 === a ? void 0 : a.settings) || void 0 === n ? void 0 : n.AppleLanguages[0])))
                    }
                    getUUID() {
                        var e, t;
                        return null !== (t = null === (e = this.reactNativeUUID) || void 0 === e ? void 0 : e.v4()) && void 0 !== t ? t : (0, r.v4)()
                    }
                    setRNDeviceInfo(e) {
                        var t, s, i, r, a;
                        this.statsigMetadata.appVersion = null !== (t = e.getVersion()) && void 0 !== t ? t : "", this.statsigMetadata.systemVersion = null !== (s = e.getSystemVersion()) && void 0 !== s ? s : "", this.statsigMetadata.systemName = null !== (i = e.getSystemName()) && void 0 !== i ? i : "", this.statsigMetadata.deviceModelName = null !== (r = e.getModel()) && void 0 !== r ? r : "", this.statsigMetadata.deviceModel = null !== (a = e.getDeviceId()) && void 0 !== a ? a : ""
                    }
                    setExpoConstants(e) {
                        var t, s;
                        this.statsigMetadata.appVersion = null !== (s = null !== (t = e.nativeAppVersion) && void 0 !== t ? t : e.nativeBuildVersion) && void 0 !== s ? s : ""
                    }
                    setExpoDevice(e) {
                        var t, s, i, r;
                        this.statsigMetadata.systemVersion = null !== (t = e.osVersion) && void 0 !== t ? t : "", this.statsigMetadata.systemName = null !== (s = e.osName) && void 0 !== s ? s : "", this.statsigMetadata.deviceModelName = null !== (i = e.modelName) && void 0 !== i ? i : "", this.statsigMetadata.deviceModel = null !== (r = e.modelId) && void 0 !== r ? r : ""
                    }
                }
            },
            332: function(e, t, s) {
                "use strict";
                var i = this && this.__importDefault || function(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                };
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                const r = i(s(820)),
                    a = s(69),
                    n = i(s(31)),
                    o = i(s(682)),
                    l = "STATSIG_LOCAL_STORAGE_LOGGING_REQUEST",
                    u = "statsig::log_event_failed",
                    d = 1024e3;
                new Set;
                t.default = class {
                    constructor(e) {
                        this.failedLogEventCount = 0, this.sdkInternal = e, this.queue = [], this.flushInterval = null, this.loggedErrors = new Set, this.failedLogEvents = [], this.exposureDedupeKeys = {}, this.failedLogEventCount = 0, this.init()
                    }
                    init() {
                        "undefined" != typeof window && "function" == typeof window.addEventListener && (window.addEventListener("blur", (() => this.flush(!0))), window.addEventListener("beforeunload", (() => this.flush(!0)))), "undefined" != typeof document && "function" == typeof document.addEventListener && document.addEventListener("visibilitychange", (() => {
                            "visible" !== document.visibilityState && this.flush(!0)
                        }));
                        const e = this;
                        this.flushInterval = setInterval((() => {
                            e.flush()
                        }), this.sdkInternal.getOptions().getLoggingIntervalMillis())
                    }
                    log(e) {
                        try {
                            if (!this.sdkInternal.getOptions().getDisableCurrentPageLogging() && "undefined" != typeof window && null != window && "object" == typeof window.location && "string" == typeof window.location.href) {
                                const t = window.location.href.split(/[?#]/);
                                (null == t ? void 0 : t.length) > 0 && e.addStatsigMetadata("currentPage", t[0])
                            }
                        } catch (e) {}
                        this.queue.push(e.toJsonObject()), this.queue.length >= this.sdkInternal.getOptions().getLoggingBufferMaxSize() && this.flush()
                    }
                    resetDedupeKeys() {
                        this.exposureDedupeKeys = {}
                    }
                    shouldLogExposure(e) {
                        const t = this.exposureDedupeKeys[e],
                            s = Date.now();
                        return !(null != t && t >= s - 6e5 || (this.exposureDedupeKeys[e] = s, 0))
                    }
                    logGateExposure(e, t, s, i, a) {
                        const n = t + String(s) + i;
                        if (!this.shouldLogExposure(n)) return;
                        const o = new r.default("statsig::gate_exposure");
                        o.setUser(e), o.setMetadata({
                            gate: t,
                            gateValue: String(s),
                            ruleID: i
                        }), o.setSecondaryExposures(a), this.log(o)
                    }
                    logConfigExposure(e, t, s, i) {
                        const a = t + s;
                        if (!this.shouldLogExposure(a)) return;
                        const n = new r.default("statsig::config_exposure");
                        n.setUser(e), n.setMetadata({
                            config: t,
                            ruleID: s
                        }), n.setSecondaryExposures(i), this.log(n)
                    }
                    logLayerExposure(e, t, s, i, a, n, o) {
                        const l = [t, s, a, n, String(o)].join("|");
                        if (!this.shouldLogExposure(l)) return;
                        const u = new r.default("statsig::layer_exposure");
                        u.setUser(e), u.setMetadata({
                            config: t,
                            ruleID: s,
                            allocatedExperiment: a,
                            parameterName: n,
                            isExplicitParameter: String(o)
                        }), u.setSecondaryExposures(i), this.log(u)
                    }
                    logAppError(e, t, s) {
                        const i = t.substring(0, 128);
                        if (this.loggedErrors.has(i) || this.loggedErrors.size > 10) return;
                        const a = new r.default("statsig::app_error");
                        a.setUser(e), a.setValue(i), a.setMetadata(s), this.log(a), this.loggedErrors.add(i)
                    }
                    logAppMetrics(e) {
                        var t;
                        if ("function" != typeof(null === (t = null === window || void 0 === window ? void 0 : window.performance) || void 0 === t ? void 0 : t.getEntriesByType)) return;
                        const s = window.performance.getEntriesByType("navigation");
                        if (!s || s.length < 1) return;
                        const i = s[0],
                            a = new r.default("statsig::app_metrics");
                        a.setUser(e), a.setValue(i.name), a.setMetadata({
                            pageLoadTimeMs: i.duration,
                            domInteractiveMs: i.domInteractive - i.startTime,
                            redirectCount: i.redirectCount
                        }), this.log(a)
                    }
                    flush(e = !1) {
                        if (0 === this.queue.length) return;
                        e && null != this.flushInterval && clearInterval(this.flushInterval);
                        const t = this.queue;
                        if (this.queue = [], e && !this.sdkInternal.getNetwork().supportsKeepalive() && navigator && navigator.sendBeacon) {
                            return void(this.sdkInternal.getNetwork().sendLogBeacon({
                                events: t,
                                statsigMetadata: this.sdkInternal.getStatsigMetadata()
                            }) || (this.queue = t.concat(this.queue), this.queue.length > 0 && (this.addFailedRequest({
                                events: this.queue,
                                statsigMetadata: this.sdkInternal.getStatsigMetadata(),
                                time: Date.now()
                            }), this.queue = []), this.saveFailedRequests()))
                        }
                        const s = this;
                        this.sdkInternal.getNetwork().postToEndpoint(a.StatsigEndpoint.Rgstr, {
                            events: t,
                            statsigMetadata: this.sdkInternal.getStatsigMetadata()
                        }, 3, 1e3, e).then((e => {
                            if (!e.ok) throw e
                        })).catch((e => {
                            if ("function" == typeof e.text) e.text().then((i => {
                                const a = new r.default(u);
                                a.setMetadata({
                                    error: `${e.status}: ${i}`
                                }), a.setUser(s.sdkInternal.getCurrentUser()), s.appendFailureLog(a, t)
                            }));
                            else {
                                const i = new r.default(u);
                                i.setMetadata({
                                    error: e.message
                                }), i.setUser(s.sdkInternal.getCurrentUser()), s.appendFailureLog(i, t)
                            }
                        })).finally((async () => {
                            e && (this.queue.length > 0 && (this.addFailedRequest({
                                events: this.queue,
                                statsigMetadata: this.sdkInternal.getStatsigMetadata(),
                                time: Date.now()
                            }), this.queue = []), await s.saveFailedRequests())
                        }))
                    }
                    async saveFailedRequests() {
                        if (this.failedLogEvents.length > 0) {
                            const e = JSON.stringify(this.failedLogEvents);
                            if (e.length > d) return void this.clearLocalStorageRequests();
                            if (n.default.asyncStorage) return void await n.default.setItemAsync(l, e);
                            o.default.setItem(l, e)
                        }
                    }
                    async sendSavedRequests() {
                        let e, t = !1;
                        if (e = n.default.asyncStorage ? await n.default.getItemAsync(l) : o.default.getItem(l), null == e) return void this.clearLocalStorageRequests();
                        e.length > d && (t = !0);
                        let s = [];
                        try {
                            s = JSON.parse(e)
                        } catch (e) {} finally {
                            this.clearLocalStorageRequests()
                        }
                        for (const e of s) null != e && e.events && Array.isArray(e.events) && this.sdkInternal.getNetwork().postToEndpoint(a.StatsigEndpoint.Rgstr, e).then((e => {
                            if (!e.ok) throw Error(e.status)
                        })).catch((s => {
                            t || this.addFailedRequest(e)
                        }))
                    }
                    addFailedRequest(e) {
                        if (e.time < Date.now() - 432e6) return;
                        if (this.failedLogEvents.length > 100) return;
                        const t = e.events.length;
                        this.failedLogEventCount + t > 1e3 || (this.failedLogEvents.push(e), this.failedLogEventCount += t)
                    }
                    clearLocalStorageRequests() {
                        n.default.asyncStorage ? n.default.removeItemAsync(l) : o.default.removeItem(l)
                    }
                    appendFailureLog(e, t) {
                        this.loggedErrors.has(e.getName()) || (this.loggedErrors.add(e.getName()), t.push(e), this.failedLogEvents.push({
                            events: t,
                            statsigMetadata: this.sdkInternal.getStatsigMetadata(),
                            time: Date.now()
                        }), this.saveFailedRequests())
                    }
                }
            },
            69: (e, t) => {
                "use strict";
                var s;
                Object.defineProperty(t, "__esModule", {
                        value: !0
                    }), t.StatsigEndpoint = void 0,
                    function(e) {
                        e.Initialize = "initialize", e.Rgstr = "rgstr", e.LogEventBeacon = "log_event_beacon"
                    }(s = t.StatsigEndpoint || (t.StatsigEndpoint = {}));
                t.default = class {
                    constructor(e) {
                        this.retryCodes = {
                            408: !0,
                            500: !0,
                            502: !0,
                            503: !0,
                            504: !0,
                            522: !0,
                            524: !0,
                            599: !0
                        }, this.canUseKeepalive = !1, this.sdkInternal = e, this.leakyBucket = {}, this.init()
                    }
                    init() {
                        if (!this.sdkInternal.getOptions().getDisableNetworkKeepalive()) try {
                            this.canUseKeepalive = "keepalive" in new Request("")
                        } catch (e) {}
                    }
                    fetchValues(e, t, i, r) {
                        return this.postWithTimeout(s.Initialize, {
                            user: e,
                            statsigMetadata: this.sdkInternal.getStatsigMetadata()
                        }, i, r, t, 10)
                    }
                    postWithTimeout(e, t, s, i, r = 0, a = 0, n = 1e3) {
                        const o = this.postToEndpoint(e, t, a, n).then((t => t.ok ? t.json().then((e => (s(e), Promise.resolve(e)))) : Promise.reject(new Error("Request to " + e + " failed with status " + t.status)))).catch((e => ("function" == typeof i && i(e), Promise.reject(e))));
                        if (0 != r) {
                            const e = new Promise(((e, t) => {
                                setTimeout((() => {
                                    e()
                                }), r)
                            }));
                            return Promise.race([o, e])
                        }
                        return o
                    }
                    sendLogBeacon(e) {
                        if (this.sdkInternal.getOptions().getLocalModeEnabled()) return !0;
                        const t = new URL(this.sdkInternal.getOptions().getApi() + s.LogEventBeacon);
                        t.searchParams.append("k", this.sdkInternal.getSDKKey()), e.clientTime = Date.now() + "";
                        let i = null;
                        try {
                            i = JSON.stringify(e)
                        } catch (e) {
                            return !1
                        }
                        return navigator.sendBeacon(t.toString(), i)
                    }
                    postToEndpoint(e, t, s = 0, i = 1e3, r = !1) {
                        if (this.sdkInternal.getOptions().getLocalModeEnabled()) return Promise.reject("no network requests in localMode");
                        const a = this.sdkInternal.getOptions().getApi() + e,
                            n = this.leakyBucket[a];
                        if (null != n && n >= 30) return Promise.reject(new Error("Request failed because you are making the same request too frequently."));
                        this.leakyBucket[a] = null == n ? 1 : n + 1;
                        const o = {
                            method: "POST",
                            body: JSON.stringify(t),
                            headers: {
                                "Content-type": "application/json; charset=UTF-8",
                                "STATSIG-API-KEY": this.sdkInternal.getSDKKey(),
                                "STATSIG-CLIENT-TIME": Date.now() + ""
                            }
                        };
                        return this.canUseKeepalive && r && (o.keepalive = !0), fetch(a, o).then((e => e.ok ? Promise.resolve(e) : (this.retryCodes[e.status] || (s = 0), e.text().then((t => Promise.reject(new Error(`${e.status}: ${t}`))))))).catch((r => s > 0 ? new Promise(((r, n) => {
                            setTimeout((() => {
                                this.leakyBucket[a] = Math.max(this.leakyBucket[a] - 1, 0), this.postToEndpoint(e, t, s - 1, 2 * i).then(r).catch(n)
                            }), i)
                        })) : Promise.reject(r))).finally((() => {
                            this.leakyBucket[a] = Math.max(this.leakyBucket[a] - 1, 0)
                        }))
                    }
                    supportsKeepalive() {
                        return this.canUseKeepalive
                    }
                }
            },
            574: (e, t) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                t.default = class {
                    constructor(e) {
                        var t, s, i, r, a, n, o, l, u;
                        null == e && (e = {});
                        let d = null !== (t = e.api) && void 0 !== t ? t : "https://api.statsig.com/v1/";
                        this.api = d.endsWith("/") ? d : d + "/", this.disableCurrentPageLogging = null !== (s = e.disableCurrentPageLogging) && void 0 !== s && s, this.environment = null !== (i = e.environment) && void 0 !== i ? i : null, this.loggingIntervalMillis = this.normalizeNumberInput(e.loggingIntervalMillis, {
                            default: 1e4,
                            min: 1e3,
                            max: 6e4
                        }), this.loggingBufferMaxSize = this.normalizeNumberInput(e.loggingBufferMaxSize, {
                            default: 100,
                            min: 2,
                            max: 500
                        }), this.disableNetworkKeepalive = null !== (r = e.disableNetworkKeepalive) && void 0 !== r && r, this.overrideStableID = null !== (a = e.overrideStableID) && void 0 !== a ? a : null, this.localMode = null !== (n = e.localMode) && void 0 !== n && n, this.initTimeoutMs = e.initTimeoutMs && e.initTimeoutMs >= 0 ? e.initTimeoutMs : 3e3, this.disableErrorLogging = null !== (o = e.disableErrorLogging) && void 0 !== o && o, this.disableAutoMetricsLogging = null !== (l = e.disableAutoMetricsLogging) && void 0 !== l && l, this.initializeValues = null !== (u = e.initializeValues) && void 0 !== u ? u : null
                    }
                    getApi() {
                        return this.api
                    }
                    getEnvironment() {
                        return this.environment
                    }
                    getDisableCurrentPageLogging() {
                        return this.disableCurrentPageLogging
                    }
                    getLoggingIntervalMillis() {
                        return this.loggingIntervalMillis
                    }
                    getLoggingBufferMaxSize() {
                        return this.loggingBufferMaxSize
                    }
                    getDisableNetworkKeepalive() {
                        return this.disableNetworkKeepalive
                    }
                    getOverrideStableID() {
                        return this.overrideStableID
                    }
                    getLocalModeEnabled() {
                        return this.localMode
                    }
                    getInitTimeoutMs() {
                        return this.initTimeoutMs
                    }
                    getDisableErrorLogging() {
                        return this.disableErrorLogging
                    }
                    getDisableAutoMetricsLogging() {
                        return this.disableAutoMetricsLogging
                    }
                    normalizeNumberInput(e, t) {
                        return null == e ? t.default : Math.max(Math.min(e, t.max), t.min)
                    }
                }
            },
            567: function(e, t, s) {
                "use strict";
                var i = this && this.__importDefault || function(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                };
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                const r = i(s(825)),
                    a = i(s(857)),
                    n = s(652),
                    o = s(898),
                    l = i(s(31)),
                    u = i(s(682));
                t.default = class {
                    constructor(e) {
                        this.overrides = {
                            gates: {},
                            configs: {}
                        }, this.sdkInternal = e, this.values = {}, this.values[this.getCurrentUserCacheKey()] = {
                            feature_gates: {},
                            dynamic_configs: {},
                            sticky_experiments: {},
                            layer_configs: {},
                            time: 0
                        }, this.stickyDeviceExperiments = {}, this.loaded = !1, this.loadFromLocalStorage()
                    }
                    async loadFromAsyncStorage() {
                        this.parseCachedValues(await l.default.getItemAsync(n.INTERNAL_STORE_KEY), await l.default.getItemAsync(n.STICKY_DEVICE_EXPERIMENTS_KEY)), this.loaded = !0
                    }
                    bootstrap(e) {
                        var t, s, i, r;
                        const a = this.sdkInternal.getCurrentUserCacheKey();
                        this.loaded = !0;
                        try {
                            let n = null !== (t = this.values[a]) && void 0 !== t ? t : {
                                feature_gates: {},
                                dynamic_configs: {},
                                layer_configs: {},
                                sticky_experiments: {},
                                time: Date.now()
                            };
                            n.feature_gates = null !== (s = e.feature_gates) && void 0 !== s ? s : {}, n.dynamic_configs = null !== (i = e.dynamic_configs) && void 0 !== i ? i : {}, n.layer_configs = null !== (r = e.layer_configs) && void 0 !== r ? r : {}, n.time = Date.now(), this.values[a] = n, this.loadOverrides()
                        } catch (e) {
                            return
                        }
                    }
                    loadFromLocalStorage() {
                        l.default.asyncStorage || (this.parseCachedValues(u.default.getItem(n.INTERNAL_STORE_KEY), u.default.getItem(n.STICKY_DEVICE_EXPERIMENTS_KEY)), this.loaded = !0)
                    }
                    isLoaded() {
                        return this.loaded
                    }
                    parseCachedValues(e, t) {
                        try {
                            this.values = e ? JSON.parse(e) : this.values
                        } catch (e) {
                            this.removeFromStorage(n.INTERNAL_STORE_KEY)
                        }
                        try {
                            const e = t ? JSON.parse(t) : null;
                            e && (this.stickyDeviceExperiments = e)
                        } catch (e) {
                            this.removeFromStorage(n.STICKY_DEVICE_EXPERIMENTS_KEY)
                        }
                        this.loadOverrides()
                    }
                    removeFromStorage(e) {
                        l.default.removeItemAsync(e), u.default.removeItem(e)
                    }
                    loadOverrides() {
                        const e = u.default.getItem(n.OVERRIDES_STORE_KEY);
                        if (null != e) try {
                            this.overrides = JSON.parse(e)
                        } catch (e) {
                            u.default.removeItem(n.OVERRIDES_STORE_KEY)
                        }
                    }
                    async save(e, t) {
                        var s, i;
                        const r = Object.entries(this.values).sort((({
                            1: e
                        }, {
                            1: t
                        }) => null == e ? 1 : null == t ? -1 : (null == t ? void 0 : t.time) - (null == e ? void 0 : e.time))).slice(0, 9);
                        this.values = Object.fromEntries(r), this.values[e] = { ...t,
                            sticky_experiments: null !== (i = null === (s = this.values[e]) || void 0 === s ? void 0 : s.sticky_experiments) && void 0 !== i ? i : {},
                            time: Date.now()
                        }, l.default.asyncStorage ? await l.default.setItemAsync(n.INTERNAL_STORE_KEY, JSON.stringify(this.values)) : u.default.setItem(n.INTERNAL_STORE_KEY, JSON.stringify(this.values))
                    }
                    checkGate(e, t = !1) {
                        var s, i;
                        const r = (0, o.getHashValue)(e);
                        let a = {
                            value: !1,
                            rule_id: "",
                            secondary_exposures: []
                        };
                        return a = t || null == this.overrides.gates[e] ? null !== (i = null === (s = this.values[this.getCurrentUserCacheKey()]) || void 0 === s ? void 0 : s.feature_gates[r]) && void 0 !== i ? i : a : {
                            value: this.overrides.gates[e],
                            rule_id: "override",
                            secondary_exposures: []
                        }, this.sdkInternal.getLogger().logGateExposure(this.sdkInternal.getCurrentUser(), e, a.value, a.rule_id, a.secondary_exposures), !0 === a.value
                    }
                    getConfig(e, t = !1) {
                        var s, i;
                        const a = (0, o.getHashValue)(e);
                        let n = new r.default(e);
                        if (t || null == this.overrides.configs[e]) {
                            if (null != (null === (s = this.values[this.getCurrentUserCacheKey()]) || void 0 === s ? void 0 : s.dynamic_configs[a])) {
                                const t = null === (i = this.values[this.getCurrentUserCacheKey()]) || void 0 === i ? void 0 : i.dynamic_configs[a];
                                n = this.createDynamicConfig(e, t)
                            }
                        } else n = new r.default(e, this.overrides.configs[e], "override");
                        return this.sdkInternal.getLogger().logConfigExposure(this.sdkInternal.getCurrentUser(), e, n.getRuleID(), n._getSecondaryExposures()), n
                    }
                    getExperiment(e, t = !1, s = !1) {
                        let i = new r.default(e);
                        if (s || null == this.overrides.configs[e]) {
                            const s = this.getLatestValue(e, "dynamic_configs"),
                                r = this.getPossiblyStickyValue(e, s, t, !1);
                            i = this.createDynamicConfig(e, r)
                        } else i = new r.default(e, this.overrides.configs[e], "override");
                        return this.sdkInternal.getLogger().logConfigExposure(this.sdkInternal.getCurrentUser(), e, i.getRuleID(), i._getSecondaryExposures()), i
                    }
                    getLayer(e, t) {
                        var s;
                        const i = this.getLatestValue(e, "layer_configs"),
                            r = this.getPossiblyStickyValue(e, i, t, !0);
                        return a.default._create(e, null == r ? void 0 : r.value, null == r ? void 0 : r.rule_id, this.sdkInternal, null == r ? void 0 : r.secondary_exposures, null == r ? void 0 : r.undelegated_secondary_exposures, null !== (s = null == r ? void 0 : r.allocated_experiment_name) && void 0 !== s ? s : "", null == r ? void 0 : r.explicit_parameters)
                    }
                    overrideConfig(e, t) {
                        try {
                            JSON.stringify(t)
                        } catch (e) {
                            return
                        }
                        this.overrides.configs[e] = t, this.saveOverrides()
                    }
                    overrideGate(e, t) {
                        this.overrides.gates[e] = t, this.saveOverrides()
                    }
                    removeGateOverride(e) {
                        null == e ? this.overrides.gates = {} : delete this.overrides.gates[e], this.saveOverrides()
                    }
                    removeConfigOverride(e) {
                        null == e ? this.overrides.configs = {} : delete this.overrides.configs[e], this.saveOverrides()
                    }
                    getAllOverrides() {
                        return this.overrides
                    }
                    saveOverrides() {
                        try {
                            u.default.setItem(n.OVERRIDES_STORE_KEY, JSON.stringify(this.overrides))
                        } catch (e) {}
                    }
                    getCurrentUserCacheKey() {
                        return this.sdkInternal.getCurrentUserCacheKey()
                    }
                    getLatestValue(e, t) {
                        var s, i, r;
                        const a = (0, o.getHashValue)(e),
                            n = this.getCurrentUserCacheKey(),
                            l = this.values[n];
                        return null !== (i = null === (s = null == l ? void 0 : l[t]) || void 0 === s ? void 0 : s[a]) && void 0 !== i ? i : null === (r = null == l ? void 0 : l[t]) || void 0 === r ? void 0 : r[e]
                    }
                    getPossiblyStickyValue(e, t, s, i) {
                        var r;
                        if (!s) return this.removeStickyValue(e), t;
                        const a = this.getStickyValue(e);
                        if (!a) return this.attemptToSaveStickyValue(e, t), t;
                        let n = null;
                        return n = i ? this.getLatestValue(null !== (r = null == a ? void 0 : a.allocated_experiment_name) && void 0 !== r ? r : "", "dynamic_configs") : t, 1 == (null == n ? void 0 : n.is_experiment_active) ? a : (1 == (null == t ? void 0 : t.is_experiment_active) ? this.attemptToSaveStickyValue(e, t) : this.removeStickyValue(e), t)
                    }
                    createDynamicConfig(e, t) {
                        var s;
                        return new r.default(e, null == t ? void 0 : t.value, null == t ? void 0 : t.rule_id, null == t ? void 0 : t.secondary_exposures, null !== (s = null == t ? void 0 : t.allocated_experiment_name) && void 0 !== s ? s : "")
                    }
                    getStickyValue(e) {
                        var t;
                        const s = (0, o.getHashValue)(e),
                            i = this.getCurrentUserCacheKey(),
                            r = this.values[i];
                        return null !== (t = null == r ? void 0 : r.sticky_experiments[s]) && void 0 !== t ? t : this.stickyDeviceExperiments[s]
                    }
                    attemptToSaveStickyValue(e, t) {
                        if (!t) return;
                        if (!t.is_user_in_experiment || !t.is_experiment_active) return;
                        const s = this.getCurrentUserCacheKey(),
                            i = (0, o.getHashValue)(e),
                            r = this.values[s];
                        !0 === t.is_device_based ? this.stickyDeviceExperiments[i] = t : r && (r.sticky_experiments[i] = t), this.saveStickyValuesToStorage()
                    }
                    removeStickyValue(e) {
                        var t;
                        const s = this.getCurrentUserCacheKey(),
                            i = (0, o.getHashValue)(e);
                        null === (t = this.values[s]) || void 0 === t || delete t.sticky_experiments[i], delete this.stickyDeviceExperiments[i], this.saveStickyValuesToStorage()
                    }
                    saveStickyValuesToStorage() {
                        l.default.asyncStorage ? (l.default.setItemAsync(n.INTERNAL_STORE_KEY, JSON.stringify(this.values)), l.default.setItemAsync(n.STICKY_DEVICE_EXPERIMENTS_KEY, JSON.stringify(this.stickyDeviceExperiments))) : (u.default.setItem(n.INTERNAL_STORE_KEY, JSON.stringify(this.values)), u.default.setItem(n.STICKY_DEVICE_EXPERIMENTS_KEY, JSON.stringify(this.stickyDeviceExperiments)))
                    }
                }
            },
            607: function(e, t, s) {
                "use strict";
                var i = this && this.__importDefault || function(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                };
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.StatsigClient = t.Layer = t.DynamicConfig = t.StatsigAsyncStorage = void 0;
                const r = i(s(793));
                var a = s(31);
                Object.defineProperty(t, "StatsigAsyncStorage", {
                    enumerable: !0,
                    get: function() {
                        return i(a).default
                    }
                });
                var n = s(825);
                Object.defineProperty(t, "DynamicConfig", {
                    enumerable: !0,
                    get: function() {
                        return i(n).default
                    }
                });
                var o = s(857);
                Object.defineProperty(t, "Layer", {
                    enumerable: !0,
                    get: function() {
                        return i(o).default
                    }
                });
                var l = s(793);
                Object.defineProperty(t, "StatsigClient", {
                    enumerable: !0,
                    get: function() {
                        return i(l).default
                    }
                });
                class u {
                    constructor() {}
                    static async initialize(e, t, s) {
                        return u.instance || (u.instance = new r.default(e, t, s)), u.instance.initializeAsync()
                    }
                    static setInitializeValues(e) {
                        return u.getClientX().setInitializeValues(e)
                    }
                    static checkGate(e, t = !1) {
                        return u.getClientX().checkGate(e, t)
                    }
                    static getConfig(e, t = !1) {
                        return u.getClientX().getConfig(e, t)
                    }
                    static getExperiment(e, t = !1, s = !1) {
                        return u.getClientX().getExperiment(e, t, s)
                    }
                    static getLayer(e, t = !1) {
                        return u.getClientX().getLayer(e, t)
                    }
                    static logEvent(e, t = null, s = null) {
                        u.getClientX().logEvent(e, t, s)
                    }
                    static updateUser(e) {
                        return u.getClientX().updateUser(e)
                    }
                    static shutdown() {
                        u.getClientX().shutdown(), u.instance = null
                    }
                    static overrideGate(e, t) {
                        u.getClientX().overrideGate(e, t)
                    }
                    static overrideConfig(e, t) {
                        u.getClientX().overrideConfig(e, t)
                    }
                    static removeOverride(e) {
                        u.getClientX().removeOverride(e)
                    }
                    static removeGateOverride(e) {
                        u.getClientX().removeGateOverride(e)
                    }
                    static removeConfigOverride(e) {
                        u.getClientX().removeConfigOverride(e)
                    }
                    static getOverrides() {
                        return u.getClientX().getOverrides()
                    }
                    static getAllOverrides() {
                        return u.getClientX().getAllOverrides()
                    }
                    static getStableID() {
                        return u.getClientX().getStableID()
                    }
                    static getClientX() {
                        if (!u.instance) throw new Error("Call and wait for initialize() to finish first.");
                        return u.instance
                    }
                }
                t.default = u, u.instance = null
            },
            344: (e, t) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.Base64 = void 0, t.Base64 = {
                    _keyStr: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                    _encodeBinary: function(e) {
                        for (var t, s, i, r, a, n, o, l = "", u = 0; u < e.length;) r = (t = e.charCodeAt(u++)) >> 2, a = (3 & t) << 4 | (s = e.charCodeAt(u++)) >> 4, n = (15 & s) << 2 | (i = e.charCodeAt(u++)) >> 6, o = 63 & i, isNaN(s) ? n = o = 64 : isNaN(i) && (o = 64), l = l + this._keyStr.charAt(r) + this._keyStr.charAt(a) + this._keyStr.charAt(n) + this._keyStr.charAt(o);
                        return l
                    },
                    encodeArrayBuffer(e) {
                        for (var s = "", i = new Uint8Array(e), r = i.byteLength, a = 0; a < r; a++) s += String.fromCharCode(i[a]);
                        return t.Base64._encodeBinary(s)
                    }
                }
            },
            652: (e, t) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.LOCAL_STORAGE_KEYS = t.STATSIG_STABLE_ID_KEY = t.INTERNAL_STORE_KEY = t.STICKY_DEVICE_EXPERIMENTS_KEY = t.OVERRIDES_STORE_KEY = void 0, t.OVERRIDES_STORE_KEY = "STATSIG_LOCAL_STORAGE_INTERNAL_STORE_OVERRIDES_V3", t.STICKY_DEVICE_EXPERIMENTS_KEY = "STATSIG_LOCAL_STORAGE_STICKY_DEVICE_EXPERIMENTS", t.INTERNAL_STORE_KEY = "STATSIG_LOCAL_STORAGE_INTERNAL_STORE_V4", t.STATSIG_STABLE_ID_KEY = "STATSIG_LOCAL_STORAGE_STABLE_ID", t.LOCAL_STORAGE_KEYS = {
                    STATSIG_LOCAL_STORAGE_STABLE_ID: !0,
                    STATSIG_LOCAL_STORAGE_INTERNAL_STORE_V4: !0,
                    STATSIG_LOCAL_STORAGE_STICKY_DEVICE_EXPERIMENTS: !0,
                    STATSIG_LOCAL_STORAGE_INTERNAL_STORE_OVERRIDES_V3: !0
                }
            },
            898: (e, t, s) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.getHashValue = t.SimpleHash = void 0;
                const i = s(23),
                    r = s(344);
                t.SimpleHash = function(e) {
                    for (var t = 0, s = 0; s < e.length; s++) {
                        t = (t << 5) - t + e.charCodeAt(s), t &= t
                    }
                    return String(t)
                }, t.getHashValue = function(e) {
                    let t = i.sha256.create().update(e).arrayBuffer();
                    return r.Base64.encodeArrayBuffer(t)
                }
            },
            31: (e, t) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                class s {
                    static getItemAsync(e) {
                        var t;
                        return s.asyncStorage ? null !== (t = s.asyncStorage.getItem(e)) && void 0 !== t ? t : null : Promise.resolve(null)
                    }
                    static setItemAsync(e, t) {
                        return s.asyncStorage ? s.asyncStorage.setItem(e, t) : Promise.resolve()
                    }
                    static removeItemAsync(e) {
                        return s.asyncStorage ? s.asyncStorage.removeItem(e) : Promise.resolve()
                    }
                }
                t.default = s
            },
            682: (e, t, s) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                });
                const i = s(652);
                class r {
                    static getItem(e) {
                        var t;
                        if ("undefined" != typeof Storage && "undefined" != typeof window && null != window && null != window.localStorage) try {
                            return window.localStorage.getItem(e)
                        } catch (e) {}
                        return null !== (t = this.fallbackSessionCache[e]) && void 0 !== t ? t : null
                    }
                    static setItem(e, t) {
                        if ("undefined" != typeof Storage && "undefined" != typeof window && null != window && null != window.localStorage) try {
                            return void window.localStorage.setItem(e, t)
                        } catch (e) {}
                        this.fallbackSessionCache[e] = t
                    }
                    static removeItem(e) {
                        if ("undefined" != typeof Storage && "undefined" != typeof window && null != window && null != window.localStorage) try {
                            return void window.localStorage.removeItem(e)
                        } catch (e) {}
                        delete this.fallbackSessionCache[e]
                    }
                    static cleanup() {
                        if ("undefined" != typeof Storage && "undefined" != typeof window && null != window && null != window.localStorage) try {
                            for (var e in window.localStorage) "string" == typeof window.localStorage[e] && (null == e || e in i.LOCAL_STORAGE_KEYS || "STATSIG_LOCAL_STORAGE" === e.substring(0, 21) && window.localStorage.removeItem(e))
                        } catch (e) {}
                    }
                }
                t.default = r, r.fallbackSessionCache = {}
            },
            614: (e, t, s) => {
                "use strict";
                var i;
                s.r(t), s.d(t, {
                    NIL: () => H,
                    parse: () => v,
                    stringify: () => d,
                    v1: () => p,
                    v3: () => R,
                    v4: () => b,
                    v5: () => M,
                    validate: () => o,
                    version: () => L
                });
                var r = new Uint8Array(16);

                function a() {
                    if (!i && !(i = "undefined" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || "undefined" != typeof msCrypto && "function" == typeof msCrypto.getRandomValues && msCrypto.getRandomValues.bind(msCrypto))) throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
                    return i(r)
                }
                const n = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
                const o = function(e) {
                    return "string" == typeof e && n.test(e)
                };
                for (var l = [], u = 0; u < 256; ++u) l.push((u + 256).toString(16).substr(1));
                const d = function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                        s = (l[e[t + 0]] + l[e[t + 1]] + l[e[t + 2]] + l[e[t + 3]] + "-" + l[e[t + 4]] + l[e[t + 5]] + "-" + l[e[t + 6]] + l[e[t + 7]] + "-" + l[e[t + 8]] + l[e[t + 9]] + "-" + l[e[t + 10]] + l[e[t + 11]] + l[e[t + 12]] + l[e[t + 13]] + l[e[t + 14]] + l[e[t + 15]]).toLowerCase();
                    if (!o(s)) throw TypeError("Stringified UUID is invalid");
                    return s
                };
                var h, c, g = 0,
                    f = 0;
                const p = function(e, t, s) {
                    var i = t && s || 0,
                        r = t || new Array(16),
                        n = (e = e || {}).node || h,
                        o = void 0 !== e.clockseq ? e.clockseq : c;
                    if (null == n || null == o) {
                        var l = e.random || (e.rng || a)();
                        null == n && (n = h = [1 | l[0], l[1], l[2], l[3], l[4], l[5]]), null == o && (o = c = 16383 & (l[6] << 8 | l[7]))
                    }
                    var u = void 0 !== e.msecs ? e.msecs : Date.now(),
                        p = void 0 !== e.nsecs ? e.nsecs : f + 1,
                        v = u - g + (p - f) / 1e4;
                    if (v < 0 && void 0 === e.clockseq && (o = o + 1 & 16383), (v < 0 || u > g) && void 0 === e.nsecs && (p = 0), p >= 1e4) throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
                    g = u, f = p, c = o;
                    var _ = (1e4 * (268435455 & (u += 122192928e5)) + p) % 4294967296;
                    r[i++] = _ >>> 24 & 255, r[i++] = _ >>> 16 & 255, r[i++] = _ >>> 8 & 255, r[i++] = 255 & _;
                    var y = u / 4294967296 * 1e4 & 268435455;
                    r[i++] = y >>> 8 & 255, r[i++] = 255 & y, r[i++] = y >>> 24 & 15 | 16, r[i++] = y >>> 16 & 255, r[i++] = o >>> 8 | 128, r[i++] = 255 & o;
                    for (var S = 0; S < 6; ++S) r[i + S] = n[S];
                    return t || d(r)
                };
                const v = function(e) {
                    if (!o(e)) throw TypeError("Invalid UUID");
                    var t, s = new Uint8Array(16);
                    return s[0] = (t = parseInt(e.slice(0, 8), 16)) >>> 24, s[1] = t >>> 16 & 255, s[2] = t >>> 8 & 255, s[3] = 255 & t, s[4] = (t = parseInt(e.slice(9, 13), 16)) >>> 8, s[5] = 255 & t, s[6] = (t = parseInt(e.slice(14, 18), 16)) >>> 8, s[7] = 255 & t, s[8] = (t = parseInt(e.slice(19, 23), 16)) >>> 8, s[9] = 255 & t, s[10] = (t = parseInt(e.slice(24, 36), 16)) / 1099511627776 & 255, s[11] = t / 4294967296 & 255, s[12] = t >>> 24 & 255, s[13] = t >>> 16 & 255, s[14] = t >>> 8 & 255, s[15] = 255 & t, s
                };

                function _(e, t, s) {
                    function i(e, i, r, a) {
                        if ("string" == typeof e && (e = function(e) {
                                e = unescape(encodeURIComponent(e));
                                for (var t = [], s = 0; s < e.length; ++s) t.push(e.charCodeAt(s));
                                return t
                            }(e)), "string" == typeof i && (i = v(i)), 16 !== i.length) throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");
                        var n = new Uint8Array(16 + e.length);
                        if (n.set(i), n.set(e, i.length), (n = s(n))[6] = 15 & n[6] | t, n[8] = 63 & n[8] | 128, r) {
                            a = a || 0;
                            for (var o = 0; o < 16; ++o) r[a + o] = n[o];
                            return r
                        }
                        return d(n)
                    }
                    try {
                        i.name = e
                    } catch (e) {}
                    return i.DNS = "6ba7b810-9dad-11d1-80b4-00c04fd430c8", i.URL = "6ba7b811-9dad-11d1-80b4-00c04fd430c8", i
                }

                function y(e) {
                    return 14 + (e + 64 >>> 9 << 4) + 1
                }

                function S(e, t) {
                    var s = (65535 & e) + (65535 & t);
                    return (e >> 16) + (t >> 16) + (s >> 16) << 16 | 65535 & s
                }

                function m(e, t, s, i, r, a) {
                    return S((n = S(S(t, e), S(i, a))) << (o = r) | n >>> 32 - o, s);
                    var n, o
                }

                function E(e, t, s, i, r, a, n) {
                    return m(t & s | ~t & i, e, t, r, a, n)
                }

                function I(e, t, s, i, r, a, n) {
                    return m(t & i | s & ~i, e, t, r, a, n)
                }

                function A(e, t, s, i, r, a, n) {
                    return m(t ^ s ^ i, e, t, r, a, n)
                }

                function w(e, t, s, i, r, a, n) {
                    return m(s ^ (t | ~i), e, t, r, a, n)
                }
                const C = function(e) {
                    if ("string" == typeof e) {
                        var t = unescape(encodeURIComponent(e));
                        e = new Uint8Array(t.length);
                        for (var s = 0; s < t.length; ++s) e[s] = t.charCodeAt(s)
                    }
                    return function(e) {
                        for (var t = [], s = 32 * e.length, i = "0123456789abcdef", r = 0; r < s; r += 8) {
                            var a = e[r >> 5] >>> r % 32 & 255,
                                n = parseInt(i.charAt(a >>> 4 & 15) + i.charAt(15 & a), 16);
                            t.push(n)
                        }
                        return t
                    }(function(e, t) {
                        e[t >> 5] |= 128 << t % 32, e[y(t) - 1] = t;
                        for (var s = 1732584193, i = -271733879, r = -1732584194, a = 271733878, n = 0; n < e.length; n += 16) {
                            var o = s,
                                l = i,
                                u = r,
                                d = a;
                            s = E(s, i, r, a, e[n], 7, -680876936), a = E(a, s, i, r, e[n + 1], 12, -389564586), r = E(r, a, s, i, e[n + 2], 17, 606105819), i = E(i, r, a, s, e[n + 3], 22, -1044525330), s = E(s, i, r, a, e[n + 4], 7, -176418897), a = E(a, s, i, r, e[n + 5], 12, 1200080426), r = E(r, a, s, i, e[n + 6], 17, -1473231341), i = E(i, r, a, s, e[n + 7], 22, -45705983), s = E(s, i, r, a, e[n + 8], 7, 1770035416), a = E(a, s, i, r, e[n + 9], 12, -1958414417), r = E(r, a, s, i, e[n + 10], 17, -42063), i = E(i, r, a, s, e[n + 11], 22, -1990404162), s = E(s, i, r, a, e[n + 12], 7, 1804603682), a = E(a, s, i, r, e[n + 13], 12, -40341101), r = E(r, a, s, i, e[n + 14], 17, -1502002290), s = I(s, i = E(i, r, a, s, e[n + 15], 22, 1236535329), r, a, e[n + 1], 5, -165796510), a = I(a, s, i, r, e[n + 6], 9, -1069501632), r = I(r, a, s, i, e[n + 11], 14, 643717713), i = I(i, r, a, s, e[n], 20, -373897302), s = I(s, i, r, a, e[n + 5], 5, -701558691), a = I(a, s, i, r, e[n + 10], 9, 38016083), r = I(r, a, s, i, e[n + 15], 14, -660478335), i = I(i, r, a, s, e[n + 4], 20, -405537848), s = I(s, i, r, a, e[n + 9], 5, 568446438), a = I(a, s, i, r, e[n + 14], 9, -1019803690), r = I(r, a, s, i, e[n + 3], 14, -187363961), i = I(i, r, a, s, e[n + 8], 20, 1163531501), s = I(s, i, r, a, e[n + 13], 5, -1444681467), a = I(a, s, i, r, e[n + 2], 9, -51403784), r = I(r, a, s, i, e[n + 7], 14, 1735328473), s = A(s, i = I(i, r, a, s, e[n + 12], 20, -1926607734), r, a, e[n + 5], 4, -378558), a = A(a, s, i, r, e[n + 8], 11, -2022574463), r = A(r, a, s, i, e[n + 11], 16, 1839030562), i = A(i, r, a, s, e[n + 14], 23, -35309556), s = A(s, i, r, a, e[n + 1], 4, -1530992060), a = A(a, s, i, r, e[n + 4], 11, 1272893353), r = A(r, a, s, i, e[n + 7], 16, -155497632), i = A(i, r, a, s, e[n + 10], 23, -1094730640), s = A(s, i, r, a, e[n + 13], 4, 681279174), a = A(a, s, i, r, e[n], 11, -358537222), r = A(r, a, s, i, e[n + 3], 16, -722521979), i = A(i, r, a, s, e[n + 6], 23, 76029189), s = A(s, i, r, a, e[n + 9], 4, -640364487), a = A(a, s, i, r, e[n + 12], 11, -421815835), r = A(r, a, s, i, e[n + 15], 16, 530742520), s = w(s, i = A(i, r, a, s, e[n + 2], 23, -995338651), r, a, e[n], 6, -198630844), a = w(a, s, i, r, e[n + 7], 10, 1126891415), r = w(r, a, s, i, e[n + 14], 15, -1416354905), i = w(i, r, a, s, e[n + 5], 21, -57434055), s = w(s, i, r, a, e[n + 12], 6, 1700485571), a = w(a, s, i, r, e[n + 3], 10, -1894986606), r = w(r, a, s, i, e[n + 10], 15, -1051523), i = w(i, r, a, s, e[n + 1], 21, -2054922799), s = w(s, i, r, a, e[n + 8], 6, 1873313359), a = w(a, s, i, r, e[n + 15], 10, -30611744), r = w(r, a, s, i, e[n + 6], 15, -1560198380), i = w(i, r, a, s, e[n + 13], 21, 1309151649), s = w(s, i, r, a, e[n + 4], 6, -145523070), a = w(a, s, i, r, e[n + 11], 10, -1120210379), r = w(r, a, s, i, e[n + 2], 15, 718787259), i = w(i, r, a, s, e[n + 9], 21, -343485551), s = S(s, o), i = S(i, l), r = S(r, u), a = S(a, d)
                        }
                        return [s, i, r, a]
                    }(function(e) {
                        if (0 === e.length) return [];
                        for (var t = 8 * e.length, s = new Uint32Array(y(t)), i = 0; i < t; i += 8) s[i >> 5] |= (255 & e[i / 8]) << i % 32;
                        return s
                    }(e), 8 * e.length))
                };
                const R = _("v3", 48, C);
                const b = function(e, t, s) {
                    var i = (e = e || {}).random || (e.rng || a)();
                    if (i[6] = 15 & i[6] | 64, i[8] = 63 & i[8] | 128, t) {
                        s = s || 0;
                        for (var r = 0; r < 16; ++r) t[s + r] = i[r];
                        return t
                    }
                    return d(i)
                };

                function O(e, t, s, i) {
                    switch (e) {
                        case 0:
                            return t & s ^ ~t & i;
                        case 1:
                        case 3:
                            return t ^ s ^ i;
                        case 2:
                            return t & s ^ t & i ^ s & i
                    }
                }

                function k(e, t) {
                    return e << t | e >>> 32 - t
                }
                const T = function(e) {
                    var t = [1518500249, 1859775393, 2400959708, 3395469782],
                        s = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
                    if ("string" == typeof e) {
                        var i = unescape(encodeURIComponent(e));
                        e = [];
                        for (var r = 0; r < i.length; ++r) e.push(i.charCodeAt(r))
                    } else Array.isArray(e) || (e = Array.prototype.slice.call(e));
                    e.push(128);
                    for (var a = e.length / 4 + 2, n = Math.ceil(a / 16), o = new Array(n), l = 0; l < n; ++l) {
                        for (var u = new Uint32Array(16), d = 0; d < 16; ++d) u[d] = e[64 * l + 4 * d] << 24 | e[64 * l + 4 * d + 1] << 16 | e[64 * l + 4 * d + 2] << 8 | e[64 * l + 4 * d + 3];
                        o[l] = u
                    }
                    o[n - 1][14] = 8 * (e.length - 1) / Math.pow(2, 32), o[n - 1][14] = Math.floor(o[n - 1][14]), o[n - 1][15] = 8 * (e.length - 1) & 4294967295;
                    for (var h = 0; h < n; ++h) {
                        for (var c = new Uint32Array(80), g = 0; g < 16; ++g) c[g] = o[h][g];
                        for (var f = 16; f < 80; ++f) c[f] = k(c[f - 3] ^ c[f - 8] ^ c[f - 14] ^ c[f - 16], 1);
                        for (var p = s[0], v = s[1], _ = s[2], y = s[3], S = s[4], m = 0; m < 80; ++m) {
                            var E = Math.floor(m / 20),
                                I = k(p, 5) + O(E, v, _, y) + S + t[E] + c[m] >>> 0;
                            S = y, y = _, _ = k(v, 30) >>> 0, v = p, p = I
                        }
                        s[0] = s[0] + p >>> 0, s[1] = s[1] + v >>> 0, s[2] = s[2] + _ >>> 0, s[3] = s[3] + y >>> 0, s[4] = s[4] + S >>> 0
                    }
                    return [s[0] >> 24 & 255, s[0] >> 16 & 255, s[0] >> 8 & 255, 255 & s[0], s[1] >> 24 & 255, s[1] >> 16 & 255, s[1] >> 8 & 255, 255 & s[1], s[2] >> 24 & 255, s[2] >> 16 & 255, s[2] >> 8 & 255, 255 & s[2], s[3] >> 24 & 255, s[3] >> 16 & 255, s[3] >> 8 & 255, 255 & s[3], s[4] >> 24 & 255, s[4] >> 16 & 255, s[4] >> 8 & 255, 255 & s[4]]
                };
                const M = _("v5", 80, T),
                    H = "00000000-0000-0000-0000-000000000000";
                const L = function(e) {
                    if (!o(e)) throw TypeError("Invalid UUID");
                    return parseInt(e.substr(14, 1), 16)
                }
            },
            147: e => {
                "use strict";
                e.exports = JSON.parse('{"name":"statsig-js","version":"4.14.3","description":"Statsig JavaScript client SDK for single user environments.","main":"dist/index.js","types":"dist/index.d.ts","scripts":{"prepare":"rm -rf build/ && rm -rf dist/ && tsc && webpack","postbuild":"rm -rf build/**/*.map","test":"jest","types":"npx tsc"},"files":["build/statsig-prod-web-sdk.js","dist/*.js","dist/*.d.ts","dist/utils/*.js","dist/utils/*.d.ts"],"jsdelivr":"build/statsig-prod-web-sdk.js","repository":{"type":"git","url":"git+https://github.com/statsig-io/js-client-sdk.git"},"author":"Statsig, Inc.","license":"ISC","bugs":{"url":"https://github.com/statsig-io/js-client-sdk/issues"},"keywords":["feature gate","feature flag","continuous deployment","ci","ab test"],"homepage":"https://www.statsig.com","devDependencies":{"@babel/preset-env":"^7.14.9","@babel/preset-typescript":"^7.14.5","@types/jest":"^26.0.20","@types/uuid":"^8.3.1","core-js":"^3.16.4","jest":"^27.1.0","terser-webpack-plugin":"^5.1.4","ts-loader":"^9.2.3","typescript":"^4.2.2","webpack":"^5.48.0","webpack-cli":"^4.7.2"},"dependencies":{"js-sha256":"^0.9.0","uuid":"^8.3.2","whatwg-fetch":"^3.6.2"},"importSort":{".js, .jsx, .ts, .tsx":{"style":"module","parser":"typescript"}}}')
            }
        },
        __webpack_module_cache__ = {};

    function __webpack_require__(e) {
        var t = __webpack_module_cache__[e];
        if (void 0 !== t) return t.exports;
        var s = __webpack_module_cache__[e] = {
            exports: {}
        };
        return __webpack_modules__[e].call(s.exports, s, s.exports, __webpack_require__), s.exports
    }
    __webpack_require__.amdO = {}, __webpack_require__.d = (e, t) => {
        for (var s in t) __webpack_require__.o(t, s) && !__webpack_require__.o(e, s) && Object.defineProperty(e, s, {
            enumerable: !0,
            get: t[s]
        })
    }, __webpack_require__.g = function() {
        if ("object" == typeof globalThis) return globalThis;
        try {
            return this || new Function("return this")()
        } catch (e) {
            if ("object" == typeof window) return window
        }
    }(), __webpack_require__.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t), __webpack_require__.r = e => {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(e, "__esModule", {
            value: !0
        })
    };
    var __webpack_exports__ = __webpack_require__(607);
    statsig = __webpack_exports__.default
})();